import{_ as a,C as t,c as n,o as e,G as p,a2 as h}from"./chunks/framework.DDIT__tB.js";const l="/assets/cover.CRvH0l-i.png",o="/assets/mcp_json.BG6PUK1H.png",r="/assets/test_case_01.BhFFzdEm.png",k="/assets/test_case_02.BmEQIMBz.png",m=JSON.parse('{"title":"vscode + mcp: chat with your api using github copilot","description":"","frontmatter":{"title":"vscode + mcp: chat with your api using github copilot","date":"2025-04-15T00:00:00.000Z","category":["mcp"],"order":1,"tag":["vscode","mcp","webdev","githubcopilot"],"summary":"Learn how chat with your API using VSCode & MCP & GitHub Copilot."},"headers":[],"relativePath":"articles/mcp-vscode-rest.md","filePath":"articles/mcp-vscode-rest.md"}'),d={name:"articles/mcp-vscode-rest.md"};function c(g,s,u,E,y,F){const i=t("ArticleStatusBadge");return e(),n("div",null,[p(i),s[0]||(s[0]=h('<img src="'+l+`"><h1 id="vscode-mcp-chat-with-your-api-using-github-copilot" tabindex="-1">vscode + mcp: chat with your api using github copilot <a class="header-anchor" href="#vscode-mcp-chat-with-your-api-using-github-copilot" aria-label="Permalink to &quot;vscode + mcp: chat with your api using github copilot&quot;">â€‹</a></h1><h2 id="tl-dr" tabindex="-1">tl;dr <a class="header-anchor" href="#tl-dr" aria-label="Permalink to &quot;tl;dr&quot;">â€‹</a></h2><p>In this article, youâ€™ll learn how to:</p><ul><li>Build a FastAPI Books API</li><li>Expose it with MCP</li><li>Chat with it in VS Code using GitHub Copilot Agent Mode</li><li>Bonus: Extend into AI-powered interactions with Ollama + OpenWebUI</li></ul><h2 id="introduction" tabindex="-1">introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;introduction&quot;">â€‹</a></h2><p>Why would you ever want to chat with your API in VS Code using MCP?</p><p>Because you can! ðŸ’ªðŸ˜‚</p><p>And honestly why not? The possibilities are endless.</p><p>This article walks you through setting up a simple REST API, publishing it with MCP, and using GitHub Copilot Chat in Agent Mode for interaction. And for those curious minds, thereâ€™s a bonus setup to push the boundaries even further.</p><h2 id="what-is-mcp-and-why-use-it" tabindex="-1">what is mcp, and why use it? <a class="header-anchor" href="#what-is-mcp-and-why-use-it" aria-label="Permalink to &quot;what is mcp, and why use it?&quot;">â€‹</a></h2><p>What is MCP? Itâ€™s like the USB-C of AI â€” standardizing how apps connect to LLMs. Though sadly, it doesn&#39;t charge your laptop... yet.</p><p>Want the nerdy details? <a href="https://modelcontextprotocol.io/introduction" target="_blank" rel="noreferrer">Dive into the official docs</a> â€” theyâ€™re surprisingly readable.</p><h2 id="setting-up-the-environment" tabindex="-1">setting up the environment <a class="header-anchor" href="#setting-up-the-environment" aria-label="Permalink to &quot;setting up the environment&quot;">â€‹</a></h2><p>Letâ€™s harness <strong>uv</strong>, the &quot;Usain (V)Bolt of Python package managers&quot;, to set up your project. (Seriously, try install something. It&#39;s done before you finish typing).</p><ol><li><p><strong>initialize your project</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div></li><li><p><strong>add dependencies</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fastapi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fastapi-mcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pydantic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uvicorn</span></span></code></pre></div></li><li><p><strong>configure your environment</strong>:</p><p>Create a <code>config.py</code> file:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WEB_API_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WEB_API_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{WEB_API_PORT}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div></li></ol><p>Optional: Your project tree might look like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ðŸ“‚ mcp-vscode-rest</span></span>
<span class="line"><span>â”œâ”€â”€ .vscode/</span></span>
<span class="line"><span>â”‚   â””â”€â”€ mcp.json</span></span>
<span class="line"><span>â”œâ”€â”€ books_server.py</span></span>
<span class="line"><span>â”œâ”€â”€ mcp_books_server.py</span></span>
<span class="line"><span>â””â”€â”€ config.py</span></span></code></pre></div><p>Now your environment is ready to support the Books Management API and MCP integration!</p><h2 id="building-the-books-management-api" tabindex="-1">building the books management api <a class="header-anchor" href="#building-the-books-management-api" aria-label="Permalink to &quot;building the books management api&quot;">â€‹</a></h2><p>Time to build a simple Books API using FastAPI.</p><ol><li><p><strong>endpoints</strong>:</p><ul><li><code>/books</code> (POST): Add a new book.</li><li><code>/books</code> (GET): Retrieve all books.</li><li><code>/books/id/{book_id}</code> (GET): Get details of a specific book by ID.</li><li><code>/books/id/{book_id}</code> (DELETE): Remove a book by ID.</li><li><code>/books/search</code> (GET): Search for books by author, title, or category.</li></ul></li><li><p><strong>key features</strong>:</p><ul><li>Validation with <code>pydantic</code> models (<code>Book</code>, <code>BookResponse</code>).</li><li>In-memory storage for simplicity (<code>library</code> dictionary).</li><li>Error handling using <code>HTTPException</code>.</li></ul></li></ol><p>Hereâ€™s an example of the <code>add_book</code> endpoint in the <code>books_server.py</code> file:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/books&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response_model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">operation_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add_book&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> add_book</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(book: Book </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Body(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> book.title.strip() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">or</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> book.author.strip():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        raise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HTTPException(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            status_code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">detail</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Title and author must be non-empty.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    book_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(library) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    library[book_id] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: book.title.strip(),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: book.author.strip(),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;category&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: book.category.strip().lower() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> book.category </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Book added successfully with ID </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">book_id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Full implementation: <a href="https://github.com/dorinandreidragan/mcp-vscode-rest" target="_blank" rel="noreferrer">GitHub repo</a></p><h3 id="publishing-your-fastapi-endpoints-with-mcp" tabindex="-1">publishing your FastAPI endpoints with MCP <a class="header-anchor" href="#publishing-your-fastapi-endpoints-with-mcp" aria-label="Permalink to &quot;publishing your FastAPI endpoints with MCP&quot;">â€‹</a></h3><p>FastAPI-MCP is a <strong>zero-configuration tool</strong> for automatically exposing FastAPI endpoints as Model Context Protocol (MCP) tools. With just a few lines of glue code, your FastAPI app gets MCP superpowers.</p><p>In <code>mcp_books_server.py</code>:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fastapi_mcp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FastApiMCP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> books_server </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uvicorn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BASE_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WEB_API_URL</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mcp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FastApiMCP(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    app,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Books Server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A simple book management server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    base_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BASE_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    describe_all_responses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    describe_full_response_schema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mcp.mount()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    uvicorn.run(app, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Your API is now discoverable and describable via MCP. No extra boilerplate needed.</p><p>Check out the <a href="https://github.com/tadata-org/fastapi_mcp" target="_blank" rel="noreferrer">FastAPI MCP GitHub repository</a> for more details.</p><h2 id="chatting-with-your-api-in-vs-code" tabindex="-1">chatting with your api in VS Code <a class="header-anchor" href="#chatting-with-your-api-in-vs-code" aria-label="Permalink to &quot;chatting with your api in VS Code&quot;">â€‹</a></h2><p>Ready to talk to your API like itâ€™s ChatGPT? Letâ€™s go.</p><h3 id="_1-configure-mcp-in-vs-code" tabindex="-1">1. configure MCP in VS Code <a class="header-anchor" href="#_1-configure-mcp-in-vs-code" aria-label="Permalink to &quot;1. configure MCP in VS Code&quot;">â€‹</a></h3><p>Create the <code>.vscode/mcp.json</code> file in your project folder to define the MCP server.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;servers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;mcp-books-server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sse&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:5000/mcp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>This file tells VS Code where to find the MCP server and how to connect.</p><h3 id="_2-start-the-mcp-server" tabindex="-1">2. start the MCP server <a class="header-anchor" href="#_2-start-the-mcp-server" aria-label="Permalink to &quot;2. start the MCP server&quot;">â€‹</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp_books_server.py</span></span></code></pre></div><h3 id="_3-use-vs-code-to-interact-with-mcp" tabindex="-1">3. use VS Code to interact with MCP <a class="header-anchor" href="#_3-use-vs-code-to-interact-with-mcp" aria-label="Permalink to &quot;3. use VS Code to interact with MCP&quot;">â€‹</a></h3><p>Open the <code>.vscode/mcp.json</code> file and click the <strong>Start</strong> link above the server config. Voila! Youâ€™re live.</p><p><img src="`+o+'" alt="mcp_json"></p><h3 id="_4-test-your-api" tabindex="-1">4. test your api <a class="header-anchor" href="#_4-test-your-api" aria-label="Permalink to &quot;4. test your api&quot;">â€‹</a></h3><p>Try out scenarios like:</p><ul><li><p><strong>adding books</strong>: <em>generate 3 books about programming and 2 about machine learning</em>.</p><p>Do you see the beauty and potential of that?</p><p><img src="'+r+'" alt="test_case_01"></p></li><li><p><strong>searching by category</strong>: <em>find the books in machine learning category</em>.</p><p>This is awesome! (Of course not me in the profile picture below ðŸ¤“)</p><p><img src="'+k+'" alt="test_case_02"></p></li></ul><p>GitHub Copilot Chat will send real API calls and show you the responses inline. Itâ€™s like Postman with AI vibes.</p><h2 id="bonus-setup-ai-enhanced-flow" tabindex="-1">bonus setup: ai-enhanced flow <a class="header-anchor" href="#bonus-setup-ai-enhanced-flow" aria-label="Permalink to &quot;bonus setup: ai-enhanced flow&quot;">â€‹</a></h2><p>Want to go next level?</p><p>Try chaining: <strong>FastAPI â†’ MCP â†’ Ollama â†’ OpenWebUI</strong></p><p>Now youâ€™re building <strong>smart API agents</strong> that can learn from feedback, log context, and evolve with your product. More on that in an upcoming lightning post! So stay tuned!</p><h2 id="heads-up-mcp-s-awesomeness-with-quirks" tabindex="-1">heads-up: MCP&#39;s awesomeness (with quirks) <a class="header-anchor" href="#heads-up-mcp-s-awesomeness-with-quirks" aria-label="Permalink to &quot;heads-up: MCP&#39;s awesomeness (with quirks)&quot;">â€‹</a></h2><p>MCP is powerful â€” but sometimes it trips over its own genius. Ask it to juggle deletes and category filters and suddenly it&#39;s confused like when doing a rebase for the first time.</p><p>Stick with it, it&#39;s part of the future, and it&#39;s worth the ride. ðŸš€</p><h2 id="your-turn" tabindex="-1">your turn <a class="header-anchor" href="#your-turn" aria-label="Permalink to &quot;your turn&quot;">â€‹</a></h2><p>Try it out, have fun, and let me know how it works for you.</p><p>Check out the full project on <a href="https://github.com/dorinandreidragan/mcp-vscode-rest" target="_blank" rel="noreferrer">GitHub</a>.</p>',56))])}const C=a(d,[["render",c]]);export{m as __pageData,C as default};
