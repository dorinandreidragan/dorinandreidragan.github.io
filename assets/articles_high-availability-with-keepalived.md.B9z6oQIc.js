import{_ as a,C as n,c as e,o as t,G as p,a2 as l}from"./chunks/framework.DDIT__tB.js";const u=JSON.parse('{"title":"ensuring high availability with two-server setup using keepalived","description":"","frontmatter":{"title":"ensuring high availability with two-server setup using keepalived","date":"2025-01-23T00:00:00.000Z","category":["devops"],"order":1,"tag":["linux","devops"],"summary":"Achieve high availability with a two-server setup using Keepalived and Vagrant."},"headers":[],"relativePath":"articles/high-availability-with-keepalived.md","filePath":"articles/high-availability-with-keepalived.md"}'),h={name:"articles/high-availability-with-keepalived.md"};function k(r,s,d,o,g,c){const i=n("ArticleStatusBadge");return t(),e("div",null,[p(i),s[0]||(s[0]=l(`<h1 id="🔋⚡-ensuring-high-availability-with-two-server-setup-using-keepalived" tabindex="-1">🔋⚡ ensuring high availability with two-server setup using Keepalived <a class="header-anchor" href="#🔋⚡-ensuring-high-availability-with-two-server-setup-using-keepalived" aria-label="Permalink to &quot;🔋⚡ ensuring high availability with two-server setup using Keepalived&quot;">​</a></h1><p>Ensuring high availability with limited resources can be challenging. I recently wanted to prove you can do it using <a href="https://keepalived-v2.readthedocs.io/en/latest/" target="_blank" rel="noreferrer">Keepalived</a> and just two servers 💪✨. To prove it, I used <a href="https://www.vagrantup.com/" target="_blank" rel="noreferrer">Vagrant</a>. Here&#39;s a quick rundown of my journey! 🚀</p><h2 id="step-1-creating-the-vagrantfile" tabindex="-1">step 1: Creating the Vagrantfile <a class="header-anchor" href="#step-1-creating-the-vagrantfile" aria-label="Permalink to &quot;step 1: Creating the Vagrantfile&quot;">​</a></h2><p>First, I created a Vagrantfile to define my virtual machines. This file specified the configuration for two Ubuntu 22.04 VMs, each with a unique MAC address and a static IP address in the same subnet.</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vagrant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">configure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |config|</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Array of predefined MAC addresses</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  mac_addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;080027000001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;080027000002&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Array of static IP addresses for the VMs</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  ip_addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.56.11&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.56.12&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mac_addresses.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">each_with_index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |mac, index|</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">define</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#{index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |vm|</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      vm.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">box</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ubuntu/jammy64&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      vm.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;private_network&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ip:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ip_addresses[index], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mac:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mac</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      vm.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">provider</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;virtualbox&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |vb|</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#{index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">memory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;512&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cpus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # Provision Keepalived and Nginx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      vm.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">provision</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;shell&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;&lt;-SHELL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get install </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> keepalived nginx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Example Keepalived configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cat &gt; /etc/keepalived/keepalived.conf &lt;&lt;EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">vrrp_instance VI_1 {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    state #{index == 0 ? &#39;MASTER&#39; : &#39;BACKUP&#39;}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    interface enp0s8</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    virtual_router_id 51</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    priority #{index == 0 ? 100 : 90}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    advert_int 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    authentication {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        auth_type PASS</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        auth_pass 1234</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    virtual_ipaddress {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        192.168.56.10</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl restart keepalived</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Configure a simple web page to show role (MASTER or BACKUP)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echo &quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Server Role: #{index == 0 ? &#39;MASTER&#39; : &#39;BACKUP&#39;}&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;&quot; &gt; /var/www/html/index.html&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl restart nginx</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      SHELL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h2 id="step-2-spinning-up-the-vms" tabindex="-1">Step 2: Spinning Up the VMs <a class="header-anchor" href="#step-2-spinning-up-the-vms" aria-label="Permalink to &quot;Step 2: Spinning Up the VMs&quot;">​</a></h2><p>With the Vagrantfile ready, I used Vagrant commands to create and start the virtual machines.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vagrant</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div><p>This command created and configured the VMs as specified in the Vagrantfile. Once the VMs were up and running, I could SSH into them to verify the setup.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vagrant</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vm1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vagrant</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vm2</span></span></code></pre></div><h2 id="step-3-configuring-keepalived" tabindex="-1">Step 3: Configuring Keepalived <a class="header-anchor" href="#step-3-configuring-keepalived" aria-label="Permalink to &quot;Step 3: Configuring Keepalived&quot;">​</a></h2><p>The heart of this setup was the Keepalived configuration. The Vagrantfile already included provisioning scripts to install and configure Keepalived on both VMs. Here’s a recap of the configuration:</p><ul><li><strong>On the MASTER server:</strong></li></ul><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vrrp_instance VI_1 {</span></span>
<span class="line"><span>    state MASTER</span></span>
<span class="line"><span>    interface enp0s8</span></span>
<span class="line"><span>    virtual_router_id 51</span></span>
<span class="line"><span>    priority 100</span></span>
<span class="line"><span>    advert_int 1</span></span>
<span class="line"><span>    authentication {</span></span>
<span class="line"><span>        auth_type PASS</span></span>
<span class="line"><span>        auth_pass 1234</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    virtual_ipaddress {</span></span>
<span class="line"><span>        192.168.56.10</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><strong>On the BACKUP server:</strong></li></ul><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vrrp_instance VI_1 {</span></span>
<span class="line"><span>    state BACKUP</span></span>
<span class="line"><span>    interface enp0s8</span></span>
<span class="line"><span>    virtual_router_id 51</span></span>
<span class="line"><span>    priority 90</span></span>
<span class="line"><span>    advert_int 1</span></span>
<span class="line"><span>    authentication {</span></span>
<span class="line"><span>        auth_type PASS</span></span>
<span class="line"><span>        auth_pass 1234</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    virtual_ipaddress {</span></span>
<span class="line"><span>        192.168.56.10</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="step-4-testing-the-setup" tabindex="-1">Step 4: Testing the Setup <a class="header-anchor" href="#step-4-testing-the-setup" aria-label="Permalink to &quot;Step 4: Testing the Setup&quot;">​</a></h2><p>With everything configured, it was time to test the setup. I started by verifying that the virtual IP (VIP) was correctly assigned to the <code>MASTER</code> server.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enp0s8</span></span></code></pre></div><p>I then accessed the web server using the VIP to ensure it was reachable.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://192.168.56.10</span></span></code></pre></div><p>If the setup is correct, you should see the page that indicates which server (MASTER or BACKUP) is responding.</p><h2 id="step-5-simulating-failover" tabindex="-1">Step 5: Simulating Failover <a class="header-anchor" href="#step-5-simulating-failover" aria-label="Permalink to &quot;Step 5: Simulating Failover&quot;">​</a></h2><p>To test the failover functionality, I stopped the Keepalived service on the <code>MASTER</code> server.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> keepalived</span></span></code></pre></div><p>I then checked the <code>BACKUP</code> server to see if it had taken over the VIP.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enp0s8</span></span></code></pre></div><p>Sure enough, the <code>BACKUP</code> server had taken over, and the web server was still accessible via the VIP.</p><h2 id="lessons-learned" tabindex="-1">Lessons Learned <a class="header-anchor" href="#lessons-learned" aria-label="Permalink to &quot;Lessons Learned&quot;">​</a></h2><p>This experience proved that high availability can be achieved with just two servers using Keepalived. Here are some key takeaways:</p><ol><li><strong>Simplicity and Power</strong>: Keepalived is a powerful tool that is relatively simple to set up and configure.</li><li><strong>High Availability on a Budget</strong>: Even with just two servers, you can achieve a high level of availability.</li><li><strong>Practical Testing</strong>: Always test your setup thoroughly to ensure that failover works as expected.</li></ol><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>When it comes to ensuring high availability with limited resources, Keepalived is a great tool to have in your arsenal. I hope this article has inspired you to explore high availability setups further.</p><p>Feel free to share your own experiences or ask questions in the comments below. Use your resources wisely and keep your systems running smoothly! 🛠️💡💻⚙️</p>`,34))])}const y=a(h,[["render",k]]);export{u as __pageData,y as default};
