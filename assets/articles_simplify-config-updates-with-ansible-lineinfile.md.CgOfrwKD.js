import{_ as a,C as n,c as e,o as t,G as l,a2 as p}from"./chunks/framework.DDIT__tB.js";const u=JSON.parse(`{"title":"simplify config updates with ansible's lineinfile","description":"","frontmatter":{"title":"simplify config updates with ansible's lineinfile","date":"2025-03-27T00:00:00.000Z","category":["devops"],"order":1,"tag":["ansible","devops","automation","cicd"],"summary":"Automate and simplify configuration file updates using Ansible’s lineinfile module."},"headers":[],"relativePath":"articles/simplify-config-updates-with-ansible-lineinfile.md","filePath":"articles/simplify-config-updates-with-ansible-lineinfile.md"}`),h={name:"articles/simplify-config-updates-with-ansible-lineinfile.md"};function o(k,i,r,d,c,g){const s=n("ArticleStatusBadge");return t(),e("div",null,[l(s),i[0]||(i[0]=p(`<h1 id="simplify-config-updates-with-ansible-s-lineinfile" tabindex="-1">simplify config updates with ansible&#39;s lineinfile <a class="header-anchor" href="#simplify-config-updates-with-ansible-s-lineinfile" aria-label="Permalink to &quot;simplify config updates with ansible&#39;s lineinfile&quot;">​</a></h1><p>Managing configuration files across servers can be tricky. Ansible&#39;s <code>lineinfile</code> module makes it easy to automate these changes while ensuring consistency and safety.</p><h2 id="quick-steps" tabindex="-1"><strong>quick steps</strong> <a class="header-anchor" href="#quick-steps" aria-label="Permalink to &quot;**quick steps**&quot;">​</a></h2><ol><li><p><strong>Define Variables</strong>: Create a dictionary with file path and configuration options:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  app_cfg_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/app/app.cfg</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  app_cfg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    max_connections</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    log_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INFO&quot;</span></span></code></pre></div></li><li><p><strong>Update Configurations</strong>: Use <code>lineinfile</code> to modify the file:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Update config options</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  lineinfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ app_cfg_file }}&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    regexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^{{ item.key }}=&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ item.key }}={{ item.value }}&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    backup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    insertbefore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">BOF</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ app_cfg | dict2items }}&quot;</span></span></code></pre></div></li></ol><h2 id="why-use-it" tabindex="-1"><strong>why use it?</strong> <a class="header-anchor" href="#why-use-it" aria-label="Permalink to &quot;**why use it?**&quot;">​</a></h2><ul><li><strong>Idempotent</strong>: Only changes what&#39;s necessary.</li><li><strong>Safe</strong>: Backups are timestamped for easy recovery.</li><li><strong>Efficient</strong>: Automates tedious manual edits.</li></ul><h2 id="conclusion" tabindex="-1"><strong>conclusion</strong> <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;**conclusion**&quot;">​</a></h2><p>With <code>lineinfile</code>, automating consistent updates across servers becomes a breeze. Give it a try!</p>`,8))])}const y=a(h,[["render",o]]);export{u as __pageData,y as default};
